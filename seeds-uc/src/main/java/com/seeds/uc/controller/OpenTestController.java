//package com.seeds.uc.controller;
//
//
//import cn.hutool.core.collection.CollUtil;
//import cn.hutool.core.text.StrFormatter;
//import cn.hutool.extra.mail.MailAccount;
//import cn.hutool.extra.mail.MailUtil;
//import com.seeds.uc.constant.UcConstant;
//import io.swagger.annotations.Api;
//import lombok.extern.slf4j.Slf4j;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.kafka.annotation.KafkaListener;
//import org.springframework.kafka.core.KafkaTemplate;
//import org.springframework.kafka.support.SendResult;
//import org.springframework.util.concurrent.ListenableFuture;
//import org.springframework.util.concurrent.ListenableFutureCallback;
//import org.springframework.web.bind.annotation.*;
//
//
///**
// * <p>
// * test 前端控制器
// * </p>
// *
// * @author yk
// * @since 2022-08-19
// */
//@RestController
//@RequestMapping("/test")
//@Api(tags = "test")
//@Slf4j
//public class OpenTestController {
//
//    @Autowired
//    private KafkaTemplate kafkaTemplate;
//
//    /**
//     * 发送消息
//     * @return
//     */
//    @GetMapping("/sendKafkaMsg")
//    public Object sendKafkaMsg() {
//        try {
//            ListenableFuture<SendResult> listenableFuture = kafkaTemplate.send("test_topic", "发送一个测试消息");
//            // 提供回调方法，可以监控消息的成功或失败的后续处理
//            listenableFuture.addCallback(new ListenableFutureCallback<SendResult>() {
//                @Override
//                public void onFailure(Throwable throwable) {
//                    log.info("发送消息失败，" + throwable.getMessage());
//                }
//                @Override
//                public void onSuccess(SendResult sendResult) {
//                    // 消息发送到的topic
//                    String topic = sendResult.getRecordMetadata().topic();
//                    // 消息发送到的分区
//                    int partition = sendResult.getRecordMetadata().partition();
//                    // 消息在分区内的offset
//                    long offset = sendResult.getRecordMetadata().offset();
//                    log.info(String.format("发送消息成功，topc：%s, partition: %s, offset：%s ", topic, partition, offset));
//                }
//            });
//
//            return "消息发送成功";
//        } catch (Exception e) {
//            e.printStackTrace();
//            return "消息发送失败";
//        }
//    }
//
//    /**
//     * test监听消息
//     * @param content
//     */
//    @KafkaListener(topics = "test_topic", groupId = "tomge-consumer-group")
//    public void receiveMesage(String content) {
//        log.info("消费消息：" + content);
//    }
//
//    /**
//     * 登陆监听消息
//     * @param content
//     */
//    @KafkaListener(topics = "login_topic", groupId = "tomge-consumer-group1")
//    public void receiveMesage1(String content) {
//        log.info("消费消息1：" + content);
//    }
//
//    /**
//     * 登陆监听消息
//     * @param content
//     */
//    @KafkaListener(topics = "login_topic", groupId = "tomge-consumer-group2")
//    public void receiveMesage2(String content) {
//        log.info("消费消息2：" + content);
//    }
//
//    /**
//     * 登陆监听消息
//     * @param content
//     */
//    @KafkaListener(topics = "login_topic", groupId = "tomge-consumer-group3")
//    public void receiveMesage3(String content) {
//        log.info("消费消息3：" + content);
//    }
//
//    /**
//     * email send
//     * @return
//     */
//    @GetMapping("/sendEmail")
//    public void sendEmail() {
//        MailAccount account = new MailAccount();
//        account.setHost("email-smtp.ap-northeast-1.amazonaws.com");
//        account.setAuth(true);
//        account.setSslEnable(true);
//        account.setFrom("seeds@theseeds.io");
//        account.setUser("AKIAQMKUPROLIXMNEIJK");
//        account.setPass("BBTyucDgyIg8qIDU1ki5XT1x3JEZZSA3cK1FC96TO0r4");
//        MailUtil.send(account, CollUtil.newArrayList("yangkang.duke@gmail.com"), UcConstant.REGISTER_EMAIL_SUBJECT, StrFormatter.format(UcConstant.REGISTER_EMAIL_CONTENT, 5, "123456"), false);
//    }
//}
