<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seeds.game.mapper.NftPublicBackpackMapper">

    <select id="selectTypeNum" resultType="com.seeds.game.dto.response.NftTypeNum">
        select distinct t1.type, ifnull(t2.num, 0) num
        from ga_nft_public_backpack t1
                 left join
             (select `type` as type, count(*) num
              from ga_nft_public_backpack
              where user_id = #{userId}
              group by type) t2 on t1.type = t2.type

    </select>

    <select id="getNftTypeList" resultType="com.seeds.game.dto.response.NftType">

        select t1.item_type_id, t2.name, t2.image
        from (select item_type_id, min(grade) grade
              from ga_nft_public_backpack
              where user_id = #{userId}
                and `type` = #{type}
              group by item_type_id) t1
                 left join ga_nft_public_backpack t2
                           on t1.item_type_id = t2.item_type_id
                               and t1.grade = t2.grade

    </select>
    <select id="getPageForWeb" resultType="com.seeds.game.dto.response.NftPublicBackpackWebResp"
            parameterType="com.seeds.game.dto.request.internal.NftBackpackWebPageReq">

        select t1.grade,
        t1.image,
        t1.token_id,
        t1.price,
        t1.state,
        t1.auto_id,
        t1.server_role_id,
        t2.durability,
        t2.base_attr_value,
        t2.rarity_attr_value
        from ga_nft_public_backpack t1
        left join ga_nft_attribute t2 on t1.token_id = t2.token_id and t1.token_address = t2.mint_address
        where t1.user_id = #{userId}
        <if test="type != null">
            and t1.type = #{type}
        </if>
        <if test="itemTypeId != null">
            and t1.item_type_id = #{itemTypeId}
        </if>
        <if test="serverRoleId != null">
            and t1.server_role_id = #{serverRoleId}
        </if>
        <if test="sort != null and sort =='price'">
            order by t1.price ${sortType}
        </if>
        <if test="sort != null and sort =='grade'">
            order by t1.grade ${sortType}
        </if>
        <if test="sort != null and sort =='durability'">
            order by t2.durability ${sortType}
        </if>
        <if test="sort != null and sort =='rarity'">
            order by t1.rarity ${sortType}
        </if>

    </select>
</mapper>
