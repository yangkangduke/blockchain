spring:
  kafka:
    bootstrap-servers: ${kafka.bootstrapAddress}
    consumer:
      group-id: ${spring.application.name}

feign:
  account:
    access:
      access-key: seeds-account-job
      secret-key: "xxx"
  client:
    config:
      default:
        connect-timeout: 45000
        read-timeout: 45000
# elasticjob 配置
elasticjob:
  # zk地址，命名空间
  regCenter:
    serverLists: 192.168.1.101:2181
    namespace: seeds-account-job
  jobs:
    # createAddressJob
    createAddressJob:
      # 作业job类
      elasticJobClass: com.seeds.account.task.AutoCreateAddressTask
      # 定时cron   every 10 sec
      cron: "0/10 * * * * ?"
      # 作业分片总数
      shardingTotalCount: 1
      # 作业描述信息
      description: "自动创建空闲地址"
      # 错误处理策略
      # LOG:记录作业异常日志，但不中断作业执行
      # THROW:抛出系统异常并中断作业执行
      # IGNORE: 忽略系统异常且不中断作业执行
      # 略：EMAIL,WECHAT,DINGTALK
      jobErrorHandlerType: LOG
      #部署作业时，先禁止启动，部署结束后统一启动
      disabled: false
      #本地配置覆盖注册中心配置,每次启动作业都以本地配置为准
      overwrite: true
    # scanChainBlockJob
    scanChainBlockJob:
      elasticJobClass: com.seeds.account.task.ScanChainBlockTask
      cron: "0/2 * * * * ?"
      shardingTotalCount: 1
      description: "scanChainBlockJob"
      jobErrorHandlerType: LOG
      disabled: false
      overwrite: true