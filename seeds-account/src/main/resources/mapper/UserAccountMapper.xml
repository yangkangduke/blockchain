<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seeds.account.mapper.UserAccountMapper">

    <update id="freeze">
        <![CDATA[
        update user_account
        set update_time = ROUND(UNIX_TIMESTAMP(NOW()) * 1000),
            version     = version + 1,
            available   = available - #{amount,jdbcType=DECIMAL},
            freeze      = freeze + #{amount,jdbcType=DECIMAL}
        where user_id = #{userId,jdbcType=BIGINT}
          and currency = #{currency,jdbcType=VARCHAR}
          and available >= #{amount,jdbcType=DECIMAL}
        ]]>
    </update>

    <update id="updateAvailable">
        update user_account
        set update_time = ROUND(UNIX_TIMESTAMP(NOW()) * 1000),
        version = version + 1,
        available = available + #{amount,jdbcType=DECIMAL}
        where user_id = #{userId,jdbcType=BIGINT}
        and currency = #{currency,jdbcType=VARCHAR}
        <if test="geZero == true">and available + #{amount,jdbcType=DECIMAL} &gt;= 0</if>
    </update>

    <update id="updateFreeze">
        update user_account
        set update_time = ROUND(UNIX_TIMESTAMP(NOW()) * 1000),
        version = version + 1,
        freeze = freeze + #{amount,jdbcType=DECIMAL}
        where user_id = #{userId,jdbcType=BIGINT}
        and currency = #{currency,jdbcType=VARCHAR}
        <if test="geZero == true">
          and freeze + #{amount,jdbcType=DECIMAL} &gt;= 0
        </if>
    </update>

    <update id="unfreeze">
        <![CDATA[
        update user_account
        set update_time = ROUND(UNIX_TIMESTAMP(NOW()) * 1000),
            version     = version + 1,
            available   = available + #{amount,jdbcType=DECIMAL},
            freeze      = freeze - #{amount,jdbcType=DECIMAL}
        where user_id = #{userId,jdbcType=BIGINT}
          and currency = #{currency,jdbcType=VARCHAR}
          and freeze >= #{amount,jdbcType=DECIMAL}
        ]]>
    </update>

    <select id="countUserAccount" resultType="java.lang.Integer">
        select count(*)
        from user_account
        where user_id = #{userId,jdbcType=BIGINT}
          and currency = #{currency,jdbcType=VARCHAR}
    </select>
</mapper>
