<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seeds.account.mapper.AddressCollectHisMapper">
    <resultMap id="BaseResultMap" type="com.seeds.account.model.AddressCollectHis">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="version" jdbcType="BIGINT" property="version"/>
        <result column="order_id" jdbcType="BIGINT" property="orderId"/>
        <result column="from_address" jdbcType="VARCHAR" property="fromAddress"/>
        <result column="to_address" jdbcType="VARCHAR" property="toAddress"/>
        <result column="currency" jdbcType="VARCHAR" property="currency"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="gas_price" jdbcType="BIGINT" property="gasPrice"/>
        <result column="gas_limit" jdbcType="BIGINT" property="gasLimit"/>
        <result column="tx_fee" jdbcType="DECIMAL" property="txFee"/>
        <result column="block_number" jdbcType="BIGINT" property="blockNumber"/>
        <result column="block_hash" jdbcType="VARCHAR" property="blockHash"/>
        <result column="tx_hash" jdbcType="VARCHAR" property="txHash"/>
        <result column="nonce" jdbcType="VARCHAR" property="nonce"/>
        <result column="tx_value" jdbcType="VARCHAR" property="txValue"/>
        <result column="comments" jdbcType="VARCHAR" property="comments"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="tx_to_address" jdbcType="VARCHAR" property="txToAddress"/>
        <result column="chain" jdbcType="TINYINT" property="chain"
                typeHandler="com.seeds.common.enums.handler.EnumWithCodeTypeHandler"
                javaType="com.seeds.common.enums.Chain"/>
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from ac_address_collect_his
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.seeds.account.model.AddressCollectHis" useGeneratedKeys="true"
            keyProperty="id">
        insert into ac_address_collect_his (id, create_time, update_time, version,
                                           order_id, from_address, to_address, currency, amount,
                                           gas_price, gas_limit, tx_fee, block_number, block_hash, tx_hash,
                                           nonce, tx_value, comments,
                                           status, tx_to_address, chain)
        values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT},
                #{version,jdbcType=BIGINT},
                #{orderId,jdbcType=BIGINT}, #{fromAddress,jdbcType=VARCHAR}, #{toAddress,jdbcType=VARCHAR},
                #{currency,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL},
                #{gasPrice,jdbcType=BIGINT}, #{gasLimit,jdbcType=BIGINT}, #{txFee,jdbcType=DECIMAL},
                #{blockNumber,jdbcType=BIGINT}, #{blockHash,jdbcType=VARCHAR}, #{txHash,jdbcType=VARCHAR},
                #{nonce,jdbcType=VARCHAR}, #{txValue,jdbcType=VARCHAR}, #{comments,jdbcType=VARCHAR},
                #{status,jdbcType=TINYINT}, #{txToAddress,jdbcType=VARCHAR}, #{chain.code,jdbcType=TINYINT})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.seeds.account.model.AddressCollectHis">
        update ac_address_collect_his
        set create_time   = #{createTime,jdbcType=BIGINT},
            update_time   = #{updateTime,jdbcType=BIGINT},
            version       = #{version,jdbcType=BIGINT},
            order_id      = #{orderId,jdbcType=BIGINT},
            from_address  = #{fromAddress,jdbcType=VARCHAR},
            to_address    = #{toAddress,jdbcType=VARCHAR},
            currency      = #{currency,jdbcType=VARCHAR},
            amount        = #{amount,jdbcType=DECIMAL},
            gas_price     = #{gasPrice,jdbcType=BIGINT},
            gas_limit     = #{gasLimit,jdbcType=BIGINT},
            tx_fee        = #{txFee,jdbcType=DECIMAL},
            block_number  = #{blockNumber,jdbcType=BIGINT},
            block_hash    = #{blockHash,jdbcType=VARCHAR},
            tx_hash       = #{txHash,jdbcType=VARCHAR},
            nonce         = #{nonce,jdbcType=VARCHAR},
            tx_value      = #{txValue,jdbcType=VARCHAR},
            comments      = #{comments,jdbcType=VARCHAR},
            status        = #{status,jdbcType=TINYINT},
            tx_to_address = #{txToAddress,jdbcType=VARCHAR},
            chain         = #{chain.code,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select *
        from ac_address_collect_his
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select *
        from ac_address_collect_his
        order by id
    </select>

    <select id="getByStatus" resultMap="BaseResultMap">
        select *
        from ac_address_collect_his
        where status = #{status,jdbcType=TINYINT}
        order by id
    </select>

    <select id="getByOrderId" resultMap="BaseResultMap">
        select *
        from ac_address_collect_his
        where order_id = #{orderId,jdbcType=BIGINT}
        order by id
    </select>

    <select id="getByAddress" resultMap="BaseResultMap">
        select *
        from ac_address_collect_his
        where 1 = 1
        <if test="chain != null">and chain = #{chain,jdbcType=TINYINT}</if>
        <if test="startTime > 0">and update_time &gt;= #{startTime,jdbcType=BIGINT}</if>
        <if test="endTime > 0">and update_time &lt;= #{endTime,jdbcType=BIGINT}</if>
        <if test="fromAddress != null">and from_address = #{fromAddress,jdbcType=VARCHAR}</if>
        <if test="toAddress != null">and to_address = #{toAddress,jdbcType=VARCHAR}</if>
    </select>

    <select id="getByChainHash" resultMap="BaseResultMap">
        select *
        from ac_address_collect_his
        where tx_hash = #{txHash,jdbcType=VARCHAR}
          and chain = #{chain.code,jdbcType=TINYINT}
    </select>

    <select id="getByChainStatusOrderTypeAndTimestamp" resultMap="BaseResultMap">
        <![CDATA[
        select tach.*
        from ac_address_collect_his tach
                 inner join ac_address_collect_order_his tacoh on tach.order_id = tacoh.id
        where tacoh.type = #{type,jdbcType=TINYINT}
          and tach.status = #{status,jdbcType=TINYINT}
          and tach.chain = #{chain.code,jdbcType=TINYINT}
          and tach.update_time <= #{timestamp,jdbcType=BIGINT}
        ORDER BY id DESC
        ]]>
    </select>

    <select id="getHotWalletByChainStatusAndTimestamp" resultMap="BaseResultMap">
        <![CDATA[
        select *
        from ac_address_collect_his
        where status = #{status,jdbcType=TINYINT}
          and order_id = 0
          and chain = #{chain.code,jdbcType=TINYINT}
          and update_time <= #{timestamp,jdbcType=BIGINT}
        ORDER BY id DESC
        ]]>
    </select>

    <update id="updateStatusByPrimaryKey">
        <![CDATA[
        update ac_chain_exchange_his
        set update_time = ROUND(UNIX_TIMESTAMP(NOW()) * 1000),
            version     = version + 1,
            status      = #{status.code,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
          and status <> #{status.code,jdbcType=TINYINT}
        ]]>
    </update>
</mapper>