<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seeds.account.mapper.ChainDepositWithdrawHisMapper">

    <select id="getIntradayWithdraw" resultType="com.seeds.account.model.ChainDepositWithdrawHis">
        <![CDATA[
        select *
        from chain_deposit_withdraw_his
        where action = 2
          and user_id = #{userId,jdbcType=BIGINT}
          and create_time >= #{startTime,jdbcType=TINYINT}
          and currency = #{currency,jdbcType=VARCHAR}
          and status in (1, 3, 4, 6, 7)
        order by id
        ]]>
    </select>

    <update id="updateStatusByPrimaryKey">
        <![CDATA[
        update chain_deposit_withdraw_his
        set update_time = ROUND(UNIX_TIMESTAMP(NOW()) * 1000),
            version     = version + 1,
            status      = #{status,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
          and status <> #{status,jdbcType=TINYINT}
        ]]>
    </update>

    <select id="getChainDepositWithdrawEarlierThanBlockNumber" resultType="com.seeds.account.model.ChainDepositWithdrawHis">
        <![CDATA[
        select *
        from chain_deposit_withdraw_his
        where chain = #{chain.code,jdbcType=VARCHAR}
          and `action` = #{action,jdbcType=TINYINT}
          and status = #{status,jdbcType=TINYINT}
          and block_number <= #{blockNumber,jdbcType=BIGINT}
        order by id
        ]]>
    </select>
    <select id="getListByStatus" resultType="com.seeds.account.model.ChainDepositWithdrawHis">
        select *
        from chain_deposit_withdraw_his
        where `action` = #{action,jdbcType=TINYINT}
        and status in
        <foreach collection="statusList" open="(" separator="," close=")" item="status">
            #{status}
        </foreach>
        order by id
    </select>
    <update id="rollbackByBlockNumberAndBlockHash">
        <![CDATA[
        update chain_deposit_withdraw_his
        set update_time = ROUND(UNIX_TIMESTAMP(NOW()) * 1000),
            version     = version + 1,
            status      = #{status,jdbcType=TINYINT}
        where block_number = #{blockNumber,jdbcType=BIGINT}
          and block_hash = #{blockHash,jdbcType=VARCHAR}
          and chain = #{chain.code,jdbcType=VARCHAR}
        ]]>
    </update>
</mapper>
