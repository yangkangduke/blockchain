<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seeds.account.mapper.ChainDepositWithdrawHisMapper">
    <resultMap id="BaseResultMap" type="com.seeds.account.model.ChainDepositWithdrawHis">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="version" jdbcType="BIGINT" property="version"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="chain" jdbcType="TINYINT" property="chain"
                typeHandler="com.seeds.common.enums.handler.EnumWithCodeTypeHandler"
                javaType="com.seeds.common.enums.Chain"/>
        <result column="from_address" jdbcType="VARCHAR" property="fromAddress"/>
        <result column="to_address" jdbcType="VARCHAR" property="toAddress"/>
        <result column="currency" jdbcType="VARCHAR" property="currency"/>
        <result column="internal" jdbcType="TINYINT" property="internal"/>
        <result column="action" jdbcType="TINYINT" property="action"
                typeHandler="com.seeds.common.enums.handler.EnumWithCodeTypeHandler"
                javaType="com.seeds.account.enums.ChainAction"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="fee_amount" jdbcType="DECIMAL" property="feeAmount"/>
        <result column="tx_fee" jdbcType="DECIMAL" property="txFee"/>
        <result column="gas_price" jdbcType="BIGINT" property="gasPrice"/>
        <result column="gas_limit" jdbcType="BIGINT" property="gasLimit"/>
        <result column="block_number" jdbcType="BIGINT" property="blockNumber"/>
        <result column="block_hash" jdbcType="VARCHAR" property="blockHash"/>
        <result column="tx_hash" jdbcType="VARCHAR" property="txHash"/>
        <result column="tx_value" jdbcType="VARCHAR" property="txValue"/>
        <result column="nonce" jdbcType="VARCHAR" property="nonce"/>
        <result column="is_replace" jdbcType="TINYINT" property="isReplace"/>
        <result column="manual" jdbcType="TINYINT" property="manual"/>
        <result column="blacklist" jdbcType="TINYINT" property="blacklist"/>
        <result column="comments" jdbcType="VARCHAR" property="comments"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="tx_to_address" jdbcType="VARCHAR" property="txToAddress"/>
    </resultMap>
    <select id="getIntradayWithdraw" resultType="com.seeds.account.model.ChainDepositWithdrawHis">
        <![CDATA[
        select *
        from chain_deposit_withdraw_his
        where action = 2
          and user_id = #{userId,jdbcType=BIGINT}
          and create_time >= #{startTime,jdbcType=TINYINT}
          and currency = #{currency,jdbcType=VARCHAR}
          and status in (1, 3, 4, 6, 7)
        order by id
        ]]>
    </select>

    <update id="updateStatusByPrimaryKey">
        <![CDATA[
        update chain_deposit_withdraw_his
        set update_time = ROUND(UNIX_TIMESTAMP(NOW()) * 1000),
            version     = version + 1,
            status      = #{status,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
          and status <> #{status,jdbcType=TINYINT}
        ]]>
    </update>

    <select id="getChainDepositWithdrawEarlierThanBlockNumber" resultType="com.seeds.account.model.ChainDepositWithdrawHis">
        <![CDATA[
        select *
        from chain_deposit_withdraw_his
        where chain = #{chain.code,jdbcType=VARCHAR}
          and `action` = #{action,jdbcType=TINYINT}
          and status = #{status,jdbcType=TINYINT}
          and block_number <= #{blockNumber,jdbcType=BIGINT}
        order by id
        ]]>
    </select>

    <update id="rollbackByBlockNumberAndBlockHash">
        <![CDATA[
        update chain_deposit_withdraw_his
        set update_time = ROUND(UNIX_TIMESTAMP(NOW()) * 1000),
            version     = version + 1,
            status      = #{status,jdbcType=TINYINT}
        where block_number = #{blockNumber,jdbcType=BIGINT}
          and block_hash = #{blockHash,jdbcType=VARCHAR}
          and chain = #{chain.code,jdbcType=VARCHAR}
        ]]>
    </update>
</mapper>
