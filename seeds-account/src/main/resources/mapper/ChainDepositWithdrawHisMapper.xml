<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seeds.account.mapper.ChainDepositWithdrawHisMapper">

    <select id="getIntradayWithdraw" resultType="com.seeds.account.model.ChainDepositWithdrawHis">
        <![CDATA[
        select *
        from ac_chain_deposit_withdraw_his
        where action = 2
          and user_id = #{userId,jdbcType=BIGINT}
          and create_time >= #{startTime,jdbcType=TINYINT}
          and currency = #{currency,jdbcType=VARCHAR}
          and status in (1, 3, 4, 6, 7)
        order by id
        ]]>
    </select>

    <update id="updateStatusByPrimaryKey">
        <![CDATA[
        update ac_chain_deposit_withdraw_his
        set update_time = ROUND(UNIX_TIMESTAMP(NOW()) * 1000),
            version     = version + 1,
            status      = #{status,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
          and status <> #{status,jdbcType=TINYINT}
        ]]>
    </update>

    <select id="getChainDepositWithdrawEarlierThanBlockNumber" resultType="com.seeds.account.model.ChainDepositWithdrawHis">
        <![CDATA[
        select *
        from ac_chain_deposit_withdraw_his
        where chain = #{chain.code,jdbcType=VARCHAR}
          and `action` = #{action,jdbcType=TINYINT}
          and status = #{status,jdbcType=TINYINT}
          and block_number <= #{blockNumber,jdbcType=BIGINT}
        order by id
        ]]>
    </select>
    <select id="getListByStatus" resultType="com.seeds.account.model.ChainDepositWithdrawHis">
        select *
        from ac_chain_deposit_withdraw_his
        where `action` = #{action,jdbcType=TINYINT}
        and status in
        <foreach collection="statusList" open="(" separator="," close=")" item="status">
            #{status}
        </foreach>
        order by id
    </select>

    <select id="selectByUserAndTime" resultType="com.seeds.account.dto.ChainDepositWithdrawHisDto" parameterType="com.seeds.account.dto.req.AccountHistoryReq">
        select *
        from ac_chain_deposit_withdraw_his
        <where>
            <if test="query.userId != null">
                <![CDATA[ and user_id = #{query.userId} ]]>
            </if>
            <if test="query.startTime != null">
                <![CDATA[ and create_time >= #{query.startTime} ]]>
            </if>
            <if test="query.endTime != null">
                <![CDATA[ and create_time < #{query.endTime} ]]>
            </if>
            <if test="query.currency != null">
                <![CDATA[ and currency = #{query.currency} ]]>
            </if>
            <if test="query.action != null">
                <![CDATA[ and `action` = #{query.action} ]]>
            </if>
            ORDER BY id DESC
        </where>
    </select>

    <select id="getDepositWithdrawList" resultType="com.seeds.account.dto.ChainDepositWithdrawHisDto" parameterType="com.seeds.account.dto.req.AccountPendingTransactionsReq">
        select
            *
        from ac_chain_deposit_withdraw_his
        <where>
            <if test="query.action != null">
                and `action` = #{query.action}
            </if>
            <if test="query.currency != null and  query.currency != '' ">
                and currency = #{query.currency}
            </if>
            <if test="query.userId != null">
                and user_id = #{query.userId}
            </if>
            <if test="query.onlyManualCheck == true">
                and manual = 1
            </if>
            <if test="query.startTime != null ">
                and create_time &gt;= #{query.startTime}
            </if>
            <if test="query.endTime != null ">
                and create_time &lt;= #{query.endTime}
            </if>
            <if test="query.statusList != null and query.statusList.size() > 0">
                and status in
                <foreach collection="query.statusList" item="status" index="i" open="(" close=")" separator=",">
                    #{status}
                </foreach>
            </if>
        </where>
    </select>

    <update id="rollbackByBlockNumberAndBlockHash">
        <![CDATA[
        update ac_chain_deposit_withdraw_his
        set update_time = ROUND(UNIX_TIMESTAMP(NOW()) * 1000),
            version     = version + 1,
            status      = #{status,jdbcType=TINYINT}
        where block_number = #{blockNumber,jdbcType=BIGINT}
          and block_hash = #{blockHash,jdbcType=VARCHAR}
          and chain = #{chain.code,jdbcType=VARCHAR}
        ]]>
    </update>

    <select id="getByChainHash" resultType="com.seeds.account.model.ChainDepositWithdrawHis">
        select *
        from ac_chain_deposit_withdraw_his
        where tx_hash = #{txHash,jdbcType=VARCHAR}
          and chain = #{chain.code,jdbcType=TINYINT}
    </select>
</mapper>
