<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seeds.account.mapper.ChainTxnReplaceMapper">
    <resultMap id="BaseResultMap" type="com.seeds.account.model.ChainTxnReplace">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Jan 13 15:04:17 CST 2021.
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="version" jdbcType="BIGINT" property="version"/>
        <result column="app_type" jdbcType="TINYINT" property="appType"
                typeHandler="com.seeds.common.enums.handler.EnumWithCodeTypeHandler"
                javaType="com.seeds.account.enums.ChainTxnReplaceAppType"/>
        <result column="app_id" jdbcType="BIGINT" property="appId"/>
        <result column="gas_price" jdbcType="BIGINT" property="gasPrice"/>
        <result column="gas_limit" jdbcType="BIGINT" property="gasLimit"/>
        <result column="gas_used" jdbcType="BIGINT" property="gasUsed"/>
        <result column="tx_fee" jdbcType="DECIMAL" property="txFee"/>
        <result column="block_number" jdbcType="BIGINT" property="blockNumber"/>
        <result column="block_hash" jdbcType="VARCHAR" property="blockHash"/>
        <result column="tx_hash" jdbcType="VARCHAR" property="txHash"/>
        <result column="nonce" jdbcType="VARCHAR" property="nonce"/>
        <result column="tx_value" jdbcType="VARCHAR" property="txValue"/>
        <result column="status" jdbcType="TINYINT" property="status"
                typeHandler="com.seeds.common.enums.handler.EnumWithCodeTypeHandler"
                javaType="com.seeds.account.enums.ChainCommonStatus"/>
        <result column="chain" jdbcType="TINYINT" property="chain"
                typeHandler="com.seeds.common.enums.handler.EnumWithCodeTypeHandler"
                javaType="com.seeds.common.enums.Chain"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from chain_txn_replace
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.seeds.account.model.ChainTxnReplace" useGeneratedKeys="true" keyProperty="id">
        insert into chain_txn_replace (id, create_time, update_time,
                                         version, app_type, app_id,
                                         gas_price, gas_limit, gas_used,
                                         tx_fee, block_number, block_hash,
                                         tx_hash, nonce, status, tx_value, chain)
        values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT},
                #{version,jdbcType=BIGINT}, #{appType.code,jdbcType=TINYINT}, #{appId,jdbcType=BIGINT},
                #{gasPrice,jdbcType=BIGINT}, #{gasLimit,jdbcType=BIGINT}, #{gasUsed,jdbcType=BIGINT},
                #{txFee,jdbcType=DECIMAL}, #{blockNumber,jdbcType=BIGINT}, #{blockHash,jdbcType=VARCHAR},
                #{txHash,jdbcType=VARCHAR}, #{nonce,jdbcType=VARCHAR}, #{status.code,jdbcType=TINYINT},
                #{txValue,jdbcType=VARCHAR}, #{chain.code,jdbcType=TINYINT})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.seeds.account.model.ChainTxnReplace">
        update chain_txn_replace
        set create_time  = #{createTime,jdbcType=BIGINT},
            update_time  = #{updateTime,jdbcType=BIGINT},
            version      = #{version,jdbcType=BIGINT},
            app_type     = #{appType.code,jdbcType=TINYINT},
            app_id       = #{appId,jdbcType=BIGINT},
            gas_price    = #{gasPrice,jdbcType=BIGINT},
            gas_limit    = #{gasLimit,jdbcType=BIGINT},
            gas_used     = #{gasUsed,jdbcType=BIGINT},
            tx_fee       = #{txFee,jdbcType=DECIMAL},
            block_number = #{blockNumber,jdbcType=BIGINT},
            block_hash   = #{blockHash,jdbcType=VARCHAR},
            tx_hash      = #{txHash,jdbcType=VARCHAR},
            nonce        = #{nonce,jdbcType=VARCHAR},
            status       = #{status.code,jdbcType=TINYINT},
            tx_value     = #{txValue,jdbcType=VARCHAR},
            chain        = #{chain.code,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select *
        from chain_txn_replace
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select *
        from chain_txn_replace
    </select>
    <update id="updateStatusByPrimaryKey">
        <![CDATA[
        update chain_txn_replace
        set update_time = ROUND(UNIX_TIMESTAMP(NOW()) * 1000),
            version     = version + 1,
            status      = #{status.code,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
          and status <> #{status.code,jdbcType=TINYINT}
        ]]>
    </update>
    <select id="getListByStatus" resultMap="BaseResultMap">
        select *
        from chain_txn_replace
        where status = #{status,jdbcType=TINYINT}
        order by id
    </select>

    <select id="getListByStatusList" resultMap="BaseResultMap">
        select *
        from chain_txn_replace
        where status in
        <foreach collection="statusList" open="(" separator="," close=")" item="status">
            #{status,jdbcType=TINYINT}
        </foreach>
        order by id
    </select>

    <select id="getListByStatusAndType" resultMap="BaseResultMap">
        select *
        from chain_txn_replace
        where
        status in
        <foreach collection="statusList" open="(" separator="," close=")" item="status">
            #{status,jdbcType=TINYINT}
        </foreach>
        and app_type = #{type.code,jdbcType=TINYINT}
    </select>

    <select id="getListByChainStatusAndType" resultMap="BaseResultMap">
        select *
        from chain_txn_replace
        <where>
            <if test="type != null">app_type = #{type.code,jdbcType=TINYINT}</if>
            <if test="status != null">and status = #{status.code,jdbcType=TINYINT}</if>
            <if test="chain != null">and `chain` = #{chain.code,jdbcType=TINYINT}</if>
        </where>
    </select>

    <select id="selectByAppIdAndAppType" resultMap="BaseResultMap">
        select *
        from chain_txn_replace
        where app_id = #{appId,jdbcType=BIGINT}
          and app_type = #{type.code,jdbcType=TINYINT}
    </select>
</mapper>