package com.seeds.account.mapper;

import com.seeds.account.enums.ChainCommonStatus;
import com.seeds.account.enums.ChainDividendAction;
import com.seeds.account.model.ChainDividendHis;
import com.seeds.common.enums.Chain;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface ChainDividendHisMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_chain_dividend_his
     *
     * @mbg.generated Wed Jan 06 22:13:30 CST 2021
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_chain_dividend_his
     *
     * @mbg.generated Wed Jan 06 22:13:30 CST 2021
     */
    int insert(ChainDividendHis record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_chain_dividend_his
     *
     * @mbg.generated Wed Jan 06 22:13:30 CST 2021
     */
    ChainDividendHis selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_chain_dividend_his
     *
     * @mbg.generated Wed Jan 06 22:13:30 CST 2021
     */
    List<ChainDividendHis> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_chain_dividend_his
     *
     * @mbg.generated Wed Jan 06 22:13:30 CST 2021
     */
    int updateByPrimaryKey(ChainDividendHis record);

    /**
     * 根据状态来查询
     *
     * @param status
     * @return
     */
    List<ChainDividendHis> getListByStatus(@Param("status") ChainCommonStatus status);

    List<ChainDividendHis> getAllByStatus(@Param("action") ChainDividendAction action, @Param("status") ChainCommonStatus status);

    List<ChainDividendHis> getAllByChain(@Param("chain") Chain chain);

    /**
     * 更新状态
     *
     * @param id
     * @param status
     * @return
     */
    int updateStatusByPrimaryKey(Long id, ChainCommonStatus status);

    ChainDividendHis getByChainHash(@Param("chain") Chain chain, @Param("txHash") String txHash);

    List<ChainDividendHis> selectByChainStatusAndTimestamp(@Param("chain") Chain chain,
                                                           @Param("status") ChainCommonStatus status,
                                                           @Param("timestamp") Long timestamp);

    List<ChainDividendHis> selectByChainAndStatus(@Param("chain") Chain chain,
                                                  @Param("status") ChainCommonStatus status);
}